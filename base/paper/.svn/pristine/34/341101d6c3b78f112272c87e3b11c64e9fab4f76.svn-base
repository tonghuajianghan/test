package dao;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.criterion.Criterion;
import org.hibernate.criterion.Projections;
import org.hibernate.criterion.Restrictions;

import util.HibernateSessionFactory;
import vo.Author;
import vo.Paper;
import dao.inter.PaperDao;

public class PaperDBDao implements PaperDao {

	private static int pageSize=20;
	public Session getSession() {
		// TODO Auto-generated method stub
		Session se=HibernateSessionFactory.getSession();
		return se;
	}

	public void savePaper(Paper paper) {
		// TODO Auto-generated method stub
		try{
			Session session=getSession();
			Transaction tra=session.beginTransaction();
			session.save(paper);
			tra.commit();
		}catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
	}
/**
 * 按照某个属性查询某一个固定值
 */
	public List<Paper> queryPaperByProperty(String propertyName, Object value) {
		// TODO Auto-generated method stub
		Criteria criteria=getSession().createCriteria(Paper.class);
		Criterion criterion=Restrictions.eq(propertyName, value);
		criteria.add(criterion);
		List<Paper> list=criteria.list();
		return list;
	}

	public void deletePaperByID(String id) {
		// TODO Auto-generated method stub
		Session session=getSession();
		session.delete(session.load(Paper.class, id));
	}

	public List<Paper> queryPaperByHql(String hql) {
		// TODO Auto-generated method stub
		
		return null;
	}

	public List<Paper> queryPaperByPage(int pageNum) {
		// TODO Auto-generated method stub 
		        List<Paper> result = new ArrayList();     
		        Criteria criteria = getSession().createCriteria(Paper.class);    
		        criteria.setFirstResult(0);   
		        criteria.setMaxResults(10);   
		                //from为起始页数size为一页10条数据   
		              //获得10条记录的集合   
		        result = criteria.list();   
		        criteria.setFirstResult(0);   
		        criteria.setProjection(Projections.projectionList().add(   
		               Projections.rowCount()));   
		                //获得满足条件的总记录数   
		        int count = ((Integer) criteria.uniqueResult()).intValue();   
		        System.out.println("总数："+count);
		        return result;
	}

	public void updatePaper(Paper paper) {
		// TODO Auto-generated method stub
		Session session=getSession();
		session.merge(paper);
	}

}
