package cn.edu.cust.eduxm.project;

import java.util.HashMap;
import java.util.Map;

import cn.edu.cust.util.search.ColumnType;
import cn.edu.cust.util.search.Search;

public class ProjectSearch extends Search{
	private static Map<String, ColumnType> columnsSet;
	
	static {
		columnsSet = new HashMap<String, ColumnType>();
		/**
		 * 根据每个列的类型添加
		 * hashmap的key是列名，value 是列类型，列类型用ColumnType的常量
		 */
		columnsSet.put("-", ColumnType.STRING);
		columnsSet.put("c_id",ColumnType.INT);
		columnsSet.put("c_area",ColumnType.STRING);
		columnsSet.put("c_budget",ColumnType.STRING);
		columnsSet.put("c_department", ColumnType.STRING);
		columnsSet.put("c_end_time", ColumnType.DATE);
		columnsSet.put("c_key1", ColumnType.STRING);
		columnsSet.put("c_key2", ColumnType.STRING);
		columnsSet.put("c_key3", ColumnType.STRING);
		columnsSet.put("c_key4", ColumnType.STRING);
		columnsSet.put("c_members", ColumnType.STRING);
		columnsSet.put("c_name", ColumnType.STRING);
		columnsSet.put("c_person", ColumnType.STRING);
		columnsSet.put("c_property", ColumnType.STRING);
		columnsSet.put("c_range", ColumnType.STRING);
		columnsSet.put("c_source", ColumnType.STRING);
		columnsSet.put("c_start_time", ColumnType.DATE);
		columnsSet.put("c_watershed", ColumnType.STRING);
		columnsSet.put("c_year", ColumnType.INT);
		columnsSet.put("c_author", ColumnType.STRING);
	}

	@Override
	protected Map<String, ColumnType> getColumnsSet() {
		return columnsSet;
	}

	@Override
	protected String getProjections() {
		return "*";
	}

	@Override
	protected String getTables() {
		return "C_PROJECT";
	}
	/**
	 * 根据状态查询的sql语句
	 * @param 项目信息的状态
	 * 邓俊文  2014-5-9 20：54
	 */
	public String buildSqlByZt(String... zt){
		StringBuffer stemp = new StringBuffer(" (");
		for(int i = 0; i < zt.length; i++){
			if(i != 0){
				stemp.append(" or ");
			}
			stemp.append(" c_zt like '");
			stemp.append(zt[i]);
			stemp.append("'");
		}
		stemp.append(")");
		
		StringBuffer sql = new StringBuffer(super.buildSQL());
		int whereIndex = sql.indexOf("where");
		int orderIndex = sql.indexOf("order");
		StringBuffer s = sql;
		s.indexOf("from");
		if(whereIndex > 0){
			//在order的前面插入and
			stemp.insert(0, " and ");
			//表示sql语句中有where的条件查询。这时我们需要再order前面加上and c_zt = ?
			if(orderIndex > 0){
				
				sql.insert(orderIndex,stemp);
			}else{
				//没有order的情况  直接在末尾添加
				sql.append(stemp);
			}
		}else{
			//没有wehere的情况
			//在order的前面插入and
			stemp.insert(0, " where ");
			sql.append(stemp);
		}
		return sql.toString();
	}
}
