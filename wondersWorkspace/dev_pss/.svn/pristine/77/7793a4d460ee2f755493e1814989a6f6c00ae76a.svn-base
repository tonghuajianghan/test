package com.wondersgroup.pss.controller;

import java.io.IOException;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.wondersgroup.core.constant.DicConstants;
import org.apache.log4j.spi.ErrorCode;
import org.apache.tiles.servlet.context.ServletUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;

import com.wondersgroup.core.bean.Page;
import com.wondersgroup.pss.bean.SearchCondition;
import com.wondersgroup.pss.bo.PssQa;
import com.wondersgroup.pss.service.QAService;

/**
 * 智能问答管理控制
 *
 * @author huangjiabei
 */
@Controller
@RequestMapping("/qa")
public class QAController {
    @Autowired
    private QAService qaService;

    private Map<String,String> getProductDic(){
        return qaService.getProductDic();
    }

    /**
     * 转至问题管理页面
     *
     * @return
     */
    @RequestMapping("/qa_manager")
    public String qamanager() {
        return "qa/qa_manager";
    }

    /**
     * 转至新增问题页面
     *
     * @param request
     * @param response
     * @param pssQa
     * @throws IOException
     * @throws ServletException
     */
    @RequestMapping("/qa_add")
    public void qa_add(HttpServletRequest request,
                       HttpServletResponse response, PssQa pssQa) throws IOException,
            ServletException {
        qaService.add(pssQa);
        // ServletUtil.write2Client(response, new AjaxMessage(ErrorCode.SUCCESS,
        // "操作成功！"));
    }

    /**
     * 转至问题删除页面
     *
     * @param request
     * @param response
     * @param qaId
     */
    @RequestMapping("/qa_delete")
    public void qa_delete(HttpServletRequest request,
                          HttpServletResponse response, PssQa pssQa) {
        qaService.delete(pssQa);
        // ServletUtil.write2Client(response, new AjaxMessage(ErrorCode.SUCCESS,
        // "操作成功！"));
    }

    /**
     * 转至问题修改页面
     *
     * @param request
     * @param response
     * @param pssQa
     */
    @RequestMapping("/qa_update")
    public void qa_update(HttpServletRequest request,
                          HttpServletResponse response, PssQa pssQa) {
        qaService.update(pssQa);
        // ServletUtil.write2Client(response, new AjaxMessage(ErrorCode.SUCCESS,
        // "操作成功！"));
    }

	/**
	 * robot 
	 * 通过jpql语句访问数据库， 
	 * 通过连表查询，
	 * 通过tagId查询qaCont
	 * 
	 * @param model
	 * @param searchRobot
	 * @return
	 */
	@RequestMapping("/searchRobot")
	public String searchRobot(Model model,String searchRobot) {	
		//返回问题的答案
		String robotQaCont = null;		
		//问题不能为空
		if(!searchRobot.equals(null)){
			robotQaCont = qaService.searchRobot(searchRobot);
		}else{
			model.addAttribute("robotnull","请输入问题");
		}	
		//model中不能添加空值
		if(!robotQaCont.equals(null)){
			model.addAttribute("robotQaCont", robotQaCont);			
		}
		return "web/web_robotchat";
	}
    /**
     * 转至问题查询页面
     *
     * @return
     */
    @RequestMapping("/qa_list")
    public String qa_list(SearchCondition qacondition, Model model) {
        Map<String,String> productDic  = this.getProductDic();
        if (qacondition == null) {
            qacondition = new SearchCondition();
            qacondition.setPageNo(1);
            qacondition.setPageSize(10);
        } else {
            Page page = qaService.search(qacondition);
            model.addAttribute("page", page);
        }
        model.addAttribute("productDic",productDic);
        model.addAttribute("condition", qacondition);
        return "qa/qa_list";
    }
}
