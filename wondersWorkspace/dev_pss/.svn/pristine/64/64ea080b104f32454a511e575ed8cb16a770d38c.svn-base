package com.wondersgroup.pss.service;

import java.util.List;

import java.util.ArrayList;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import com.wondersgroup.core.bean.Page;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import com.wondersgroup.core.constant.ConfigConstants;
import com.wondersgroup.core.constant.DicConstants;
import com.wondersgroup.core.util.CascadeUtil;
import com.wondersgroup.pss.bean.SearchCondition;
import com.wondersgroup.pss.bo.PssQa;
import com.wondersgroup.pss.bo.PssQaTag;
import com.wondersgroup.pss.dao.QADAO;

@Service
@Transactional
public class QAService {
    @Autowired
    private QADAO qaDAO;

    public void add(PssQa pssQa) {
        // TODO Auto-generated method stub
        qaDAO.add(pssQa);
    }

    public void delete(PssQa pssQa) {
        // TODO Auto-generated method stub
        qaDAO.delete(pssQa);
    }

    public void update(PssQa pssQa) {
        // TODO Auto-generated method stub
        qaDAO.update(pssQa);
    }


    public Page search(SearchCondition qacondition) {
        // TODO Auto-generated method stub
        Page page = qaDAO.search(qacondition);
        if (page != null) {
            for( PssQa qa : (List<PssQa>)page.getResult() ){
                CascadeUtil.lazyInit(qa.getPssQaTagSet());
            }
            
        }
        return page;
    }

    public Map<String,String> getProductDic(){
        return qaDAO.getProductDic();
    }

    
	/**
	 * robot
	 * 通过sql语句访问数据库，
	 * 通过连表查询， 
	 * 通过tagId查询qaCont
	 * 
	 * @param searchRobot
	 * @return
	 */
	public String searchRobot(String searchRobot) {		
		SearchCondition qacondition = new SearchCondition();
		//返回问题的答案
		String robotQaCont = "";
			
		List<PssQa> listPssQaAll = new ArrayList<PssQa>();
					
		searchRobot = searchRobot.trim();
		int searchlocation = 0;		
		String tag = null;
		while(searchRobot.length() != 0){
			List<PssQa> listPssQa = new ArrayList<PssQa>();
			searchlocation = searchRobot.indexOf(",");
			if(searchlocation == -1){
				//没有逗号
				tag = searchRobot;				
				qacondition.setQaDesc(tag);
				qacondition.setTagDesc(tag);
				listPssQa = qaDAO.searchRobot(qacondition);
				
				for(int i=0;i<listPssQa.size();i++){
					listPssQaAll.add(listPssQa.get(i));
				}		
				break;
			}else{
				//有逗号
				tag = searchRobot.substring(0, searchlocation);
				searchRobot = searchRobot.substring(searchlocation + 1, searchRobot.length());
				qacondition.setQaDesc(tag);
				qacondition.setTagDesc(tag);
				listPssQa = qaDAO.searchRobot(qacondition);
				
				for(int i=0;i<listPssQa.size();i++){
					listPssQaAll.add(listPssQa.get(i));
				}
			}
			
			
		}	
		for(int i=0;i<listPssQaAll.size();i++){
			System.out.println("cont:" +listPssQaAll.get(i).getQaCont());
		}
		
		//robotQaCont = robotQaCont.substring(1, robotQaCont.length());
		return robotQaCont;
	}
    @Override
    public String toString() {
        // TODO Auto-generated method stub
        return super.toString();
    }
}
