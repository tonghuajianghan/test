<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 
	命名空间使得接口绑定成为可能
	namespace 就是关联xml文件与mapper接口的桥梁
 -->
<mapper namespace="com.jh.dao.DeptMapper">
	<!-- 学习使用resultMap  -->
	<!-- 解决列名不匹配的另外一种方式 -->
	<resultMap id="BaseResultMap" type="com.jh.vo.Dept">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="tag" property="tag" jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- 多对一的集合实现  多个users有一个dept-->
	<!-- 使用association集合的映射主表与从表不能有相同名字的列名 -->
	<resultMap type="com.jh.vo.Users" id="resultDeptAndUsersList">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="age" property="age" jdbcType="INTEGER" />
		<!-- 类似于hibernate的@ManyToOne -->
		<association property="dept" javaType="com.jh.vo.Dept">
			<id column="id" property="id" jdbcType="VARCHAR" />
			<result column="name" property="name" jdbcType="VARCHAR" />
			<result column="tag" property="tag" jdbcType="VARCHAR" />
		</association>
	</resultMap>
	
	<resultMap type="com.jh.vo.Dept" id="DeptCollectionUsers">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="tag" property="tag" jdbcType="VARCHAR" />
		<collection property="users" javaType="ArrayList" ofType="com.jh.vo.Users">
			<id column="users_id" property="id" jdbcType="VARCHAR" />
			<result column="users_name" property="name" jdbcType="VARCHAR" />
			<result column="users_age" property="age" jdbcType="INTEGER" />
		</collection>
	</resultMap>
	
	<!-- 使用collection集合的映射主表与从表不能有相同名字的列名 -->
	<!-- collection resultMap 的引用路径为mapper标签的namespace路径 -->
	<resultMap type="com.jh.vo.Dept" id="DeptCollectionUsersRef" >
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="tag" property="tag" jdbcType="VARCHAR" />
		<collection property="users" resultMap="com.jh.dao.UsersMapper.UsersResultMap" ofType="com.jh.vo.Users"/>
	</resultMap>
	
	
	<!-- 使用结果集作为返回参数 -->
	<!-- parameterType是java的类型 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select * from dept where id = #{id}
	</select>
	
	<!-- 返回list列表 -->
	<select id="selectDeptList" resultMap="BaseResultMap">
		select * from dept
	</select>
	
	<!-- 两表关联查询  association-->
	<select id="selectDeptAndUsers" resultMap="resultDeptAndUsersList">
		select * from Users u,Dept d where u.dept_id = d.id
	</select>
	
	<select id="selectDeptCollectionUsers" resultMap="DeptCollectionUsersRef">
		select * from Dept d ,Users u where d.id = u.dept_id
	</select>
</mapper>